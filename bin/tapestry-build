#!/usr/bin/env node

'use strict'

const exec = require('child_process').exec
const logger = require('../dist/logger')
const cwd = process.cwd()
const path = require('path')
const glob = require('glob-fs')({ gitignore: true })
const babel = require('babel-core')
const fs = require('fs')

logger.info('Preparing Tapestryâ€¦\n')

const noTests = (file) => {
   if (/__tests__/.test(file.path)) {
    file.exclude = true;
  }
  return file
}

const noPublic = (file) => {
  if (/public/.test(file.path)) {
    file.exclude = true
  }
  return true
}

const transform = (filePath) => {
  babel.transformFile(`${cwd}/${filePath}`, { presets: ['es2015', 'react'] }, (err, result) => {
    if (err) {
      return logger.error(err)
    }
    fs.writeFile(`${cwd}/.tapestry/${filePath}`, result.code, 'utf8', (err) => {
      if (err) {
        return logger.error(err)
      }
    })
  })
}

glob.use(noTests).use(noPublic).readdir('**/*.js', function (err, files) {
  if (err) {
    logger.error(err)
  } else {
    files.push('tapestry.config.js')
    files.map((file) => {
      console.log(file)
      transform(file)
    })
   logger.success('Tapestry built! Run `tapestry start` to boot')
  }
})
