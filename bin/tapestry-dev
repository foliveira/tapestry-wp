#!/usr/bin/env node

const path = require('path')
const fs = require('fs')
const webpack = require('webpack')

const logger = require('../dist/logger')
const defaultConfig = require('../src/webpack/server.config')
const customConfig = require('../dist/config.custom').default

const cwd = process.cwd()
const env = 'development'
const userWebpackPath = path.resolve(cwd, 'webpack.config.js')

// transpile any following imports
require('babel-register')({
  presets: ['es2015', 'react'],
  plugins: ['lodash', 'transform-object-rest-spread']
})

let userConfig = {}

if (fs.existsSync(userWebpackPath)) {
  const userConfigModule = require(userWebpackPath)
  userConfig = userConfigModule.default || userConfigModule
}

const webpackConfig = customConfig({
  userConfig,
  defaultConfig,
  options: { cwd, env }
})
const compiler = webpack(webpackConfig)

compiler.run((err, stats) => {

  const server = require(path.resolve(cwd, '.tapestry/server.bundle.js'))
  server.boot({ cwd, env, userConfig })
})
